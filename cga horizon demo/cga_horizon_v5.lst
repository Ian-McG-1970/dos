     1                                  ; nasm cga_line_v7.asm -o cgaline.com -f bin
     2                                  
     3                                  
     4                                  ; list of next line tables - even values = +8192 odd values = -8192 - put into 2 registers - swap registers after each next line
     5                                  
     6                                  VIDEO_SEGMENT	equ	0b800h 	; display memory segment for true CGA graphics modes
     7                                  SW				equ 80 		; screen width
     8                                  SE				equ	0		; screen even start
     9                                  SO				equ	8192	; screen odd start
    10                                  
    11                                  INPUT_STATUS_1	equ	03dah	; VGA status register
    12                                  VSYNC_MASK	equ	08h	; vertical sync bit in status register 1
    13                                  DE_MASK		equ	01h	; display enable bit in status register 1
    14                                  
    15                                  MAP_MASK	equ	2		; SC map mask register
    16                                  SC_INDEX		equ	3c4h	; SC index register
    17                                   
    18                                  TOP_CC		equ	1
    19                                  BOTTOM_CC	equ	2
    20                                  LEFT_CC		equ	4
    21                                  RIGHT_CC		equ	8
    22                                  BEHIND_CC	equ	16
    23                                  MIDDLE_X		equ	160
    24                                  MIDDLE_Y		equ	100
    25                                  TOP_EDGE	equ	MIDDLE_Y-100
    26                                  BOTTOM_EDGE	equ	MIDDLE_Y+99
    27                                  LEFT_EDGE	equ	MIDDLE_X-160
    28                                  RIGHT_EDGE	equ	MIDDLE_X+159
    29                                  
    30                                  KEY_ESC	EQU 1bh
    31                                  KEY_Q	EQU 'q'
    32                                  KEY_W	EQU 'w'
    33                                  KEY_E	EQU 'e'
    34                                  KEY_R	EQU 'r'
    35                                  
    36                                  CPU 8086
    37                                  bits 16
    38                                  org 100h
    39                                  
    40                                  section .text
    41                                  
    42                                  start:
    43 00000000 E8B600                  	call	BuildScreenTable
    44 00000003 B80500                  	mov	ax,05h ; 04h	; CGA 320 x 200 4 colors ; more 05 instead of mode 04
    45 00000006 CD10                    	int		10h
    46                                  
    47                                  ;	mov	ax,0Bh 	; Pallette
    48                                  ;	mov	bh,1
    49                                  ;	mov	bl,0
    50                                  ;	mov	bx,00000h ; pallette 0 high
    51                                  ;	int	10h 
    52                                  	
    53 00000008 B44A                    	mov	ah, 4ah
    54 0000000A BB0010                  	mov	bx, 1000h
    55 0000000D CD21                    	int	21h
    56 0000000F B448                    	mov	ah, 48h
    57 00000011 BB0010                  	mov	bx, 1000h
    58 00000014 CD21                    	int	21h
    59 00000016 A3[C381]                	mov	[BackBufferSeg], ax
    60                                  
    61 00000019 31C0                    	xor ax,ax
    62 0000001B A2[AA81]                	mov	[Exit],al
    63 0000001E A3[9481]                	mov	[XAngle],ax
    64 00000021 A3[9681]                	mov	[YAngle],ax	
    65                                  	
    66                                  ;	mov	[Test0],ax
    67                                  	
    68                                  MainLoop:
    69 00000024 E86603                  		call	WaitVSync
    70 00000027 E87103                  		call	CopyClearBackBuffer
    71                                  	
    72 0000002A 8B1E[C381]              		mov		bx,[BackBufferSeg]
    73 0000002E 8EC3                    		mov		es,bx
    74                                  
    75 00000030 B300                    		mov		bl,0
    76 00000032 A1[9481]                		mov		ax,[XAngle]
    77 00000035 E8C505                  		call	Hex16
    78 00000038 B301                    		mov		bl,1
    79 0000003A A1[9681]                		mov		ax,[YAngle]
    80 0000003D E8BD05                  		call	Hex16
    81 00000040 B303                    		mov		bl,3
    82 00000042 A1[9881]                		mov		ax,[SinX]
    83 00000045 E8B505                  		call	Hex16
    84 00000048 B304                    		mov		bl,4
    85 0000004A A1[9A81]                		mov		ax,[CosX]
    86 0000004D E8AD05                  		call	Hex16
    87 00000050 B306                    		mov		bl,6
    88 00000052 A1[9C81]                		mov		ax,[SinY]
    89 00000055 E8A505                  		call	Hex16
    90 00000058 B307                    		mov		bl,7
    91 0000005A A1[9E81]                		mov		ax,[CosY]
    92 0000005D E89D05                  		call	Hex16
    93                                  
    94                                  ;		mov		bl,9
    95                                  ;		mov		ax,[Test0]
    96                                  ;		call	Hex16
    97 00000060 B30A                    		mov		bl,10
    98 00000062 A1[AD81]                		mov		ax,[Test1]
    99 00000065 E89505                  		call	Hex16
   100 00000068 B30B                    		mov		bl,11
   101 0000006A A1[AF81]                		mov		ax,[Test2]
   102 0000006D E88D05                  		call	Hex16
   103 00000070 B30C                    		mov		bl,12
   104 00000072 A1[B181]                		mov		ax,[Test3]
   105 00000075 E88505                  		call	Hex16
   106 00000078 B30D                    		mov		bl,13
   107 0000007A A1[B381]                		mov		ax,[Test4]
   108 0000007D E87D05                  		call	Hex16
   109 00000080 B30F                    		mov		bl,15
   110 00000082 A1[B581]                		mov		ax,[Test5]
   111 00000085 E87505                  		call	Hex16
   112 00000088 B310                    		mov		bl,16
   113 0000008A A1[B781]                		mov		ax,[Test6]
   114 0000008D E86D05                  		call	Hex16
   115 00000090 B311                    		mov		bl,17
   116 00000092 A1[B981]                		mov		ax,[Test7]
   117 00000095 E86505                  		call	Hex16
   118 00000098 B312                    		mov		bl,18
   119 0000009A A1[BB81]                		mov		ax,[Test8]
   120 0000009D E85D05                  		call	Hex16
   121                                  
   122                                  ;		mov		bl,25
   123                                  ;		mov		ax,[Test9]
   124                                  ;		call	Hex16
   125                                  		
   126                                  ;		mov		bl,27
   127                                  ;		mov		ax,[Test10]
   128                                  ;		call	Hex16
   129                                  
   130                                  ;		mov		bl,29
   131                                  ;		mov		ax,[BackBufferSeg]
   132                                  ;		call	Hex16
   133                                  
   134                                  ;		mov		bl,30
   135                                  ;		mov		ax,[Test11]
   136                                  ;		call	Hex16
   137                                  
   138                                  ;		call	BuildRotateMatrixV2
   139                                  
   140 000000A0 E83200                  		call	Horizon
   141 000000A3 E89502                  		call	GetKey
   142                                  		
   143 000000A6 A0[AA81]                	mov		al,[Exit]
   144 000000A9 08C0                    	or	al,al
   145 000000AB 7503E974FF              	je		MainLoop
   146                                  
   147 000000B0 B80300                  Done:	mov		ax,3	; reset to text mode
   148 000000B3 CD10                    		int		10h
   149 000000B5 B44C                    		mov		ah,4ch	; exit to DOS
   150 000000B7 CD21                    		int		21h
   151                                  
   152 000000B9 8D3E[0000]              BuildScreenTable:	lea		di,[BackBufferTable]
   153 000000BD 31ED                    					xor		bp,bp	; even lines
   154 000000BF B96400                  					mov		cx,100
   155 000000C2 892D                    .loop:					mov		[di],bp
   156 000000C4 81C50020                						add		bp,8192
   157 000000C8 896D02                  						mov		[di+2],bp
   158 000000CB 81EDB01F                						sub		bp,8192-80
   159 000000CF 83C704                  						add		di,4
   160 000000D2 E2EE                    						loop	.loop
   161 000000D4 C3                      					ret
   162                                  
   163                                  Horizon:
   164 000000D5 8B2E[9481]              		mov		bp,[XAngle]	; roll
   165 000000D9 E83204                  		call	SinCosV2
   166 000000DC 89EB                    		mov bx,bp
   167                                  ;		mov		[SinX],bx
   168                                  ;		mov		[CosX],ax
   169                                  
   170                                  ;		xchg ax,bp
   171                                  
   172                                  ; sar ax,1
   173                                  ; sar bx,1
   174                                  		
   175 000000DE 89C1                    		mov		cx,ax	; CosX
   176 000000E0 B8A000                  		mov		ax,160
   177 000000E3 F7EB                    		imul	bx			; *SinX - could be replaced with (bp*128) + (bp*32)
   178 000000E5 F7F9                    		idiv	cx
   179 000000E7 A3[A081]                		mov		[HorEdge],ax
   180                                  
   181 000000EA 8B1E[9681]              		mov		bx,[YAngle]	; pitch
   182 000000EE 81E3FE03                		and		bx,1022 ; can be optimised to and 1111111110 = 511*2
   183                                  ;	mov		[Test1],bx
   184 000000F2 8B9F[800C]              		mov		bx,[HorizonTable+bx]
   185                                  
   186 000000F6 85ED                    		test	bp,bp
   187 000000F8 780D                    		js		.slpe_n
   188                                  
   189 000000FA 89DD                    .slpe_p		mov		bp,bx
   190 000000FC 01C3                    			add		bx,ax
   191 000000FE 29C5                    			sub		bp,ax
   192                                  
   193 00000100 31D2                    			xor		dx,dx
   194 00000102 B93F01                  			mov		cx,RIGHT_EDGE
   195                                  
   196 00000105 EB0B                    			jmp		.slpe_c
   197                                  
   198 00000107 89DD                    .slpe_n		mov		bp,bx
   199 00000109 01C5                    			add		bp,ax
   200 0000010B 29C3                    			sub		bx,ax
   201                                  
   202 0000010D 31C9                    			xor		cx,cx
   203 0000010F BA3F01                  			mov		dx,RIGHT_EDGE
   204                                  		
   205 00000112 8916[A281]              .slpe_c	mov		[XST],dx
   206 00000116 892E[A481]              		mov		[YST],bp
   207 0000011A 890E[A681]              		mov		[XEN],cx
   208 0000011E 891E[A881]              		mov		[YEN],bx
   209                                  
   210 00000122 8916[AD81]              	mov		[Test1],dx
   211 00000126 892E[AF81]              	mov		[Test2],bp
   212 0000012A 890E[B181]              	mov		[Test3],cx
   213 0000012E 891E[B381]              	mov		[Test4],bx
   214                                  
   215 00000132 85DB                    		test	bx,bx	; bottom if off top
   216 00000134 785C                    		js		.exit
   217                                  
   218 00000136 81FDC700                		cmp		bp,BOTTOM_EDGE	; top if off bottom
   219 0000013A 7F56                    		jg		.exit
   220                                  
   221 0000013C 85ED                    		test	bp,bp		; is top off top
   222 0000013E 791A                    		jns		.clpt_c		; no
   223 00000140 89C8                    			mov		ax,cx
   224 00000142 29D0                    			sub		ax,dx	;	ax=(endx-sttx) = (cx-dx)
   225 00000144 89DE                    			mov		si,bx
   226 00000146 29EE                    			sub		si,bp	;	si=(endy-stty) = (bx-bp)
   227                                  
   228 00000148 89D7                    			mov		di,dx	; backup sttx
   229                                  
   230 0000014A F7ED                    			imul	bp		; 	ax = ( (ex-sx) *sy)
   231 0000014C F7FE                    			idiv	si		; 	ax = ( ( (ex-sx) *sy ) / (ey-sy) )
   232 0000014E 29C7                    			sub		di,ax	;	sx = sx - ( ( (ex-sx) *sy ) / (ey-sy) );
   233 00000150 893E[A281]              			mov		[XST],di
   234 00000154 31ED                    			xor		bp,bp
   235 00000156 892E[A481]              			mov		[YST],bp
   236                                  
   237 0000015A 81FBC700                .clpt_c	cmp		bx,BOTTOM_EDGE
   238 0000015E 7E1F                    		jle		.clpb_c
   239                                  
   240 00000160 89C8                    			mov		ax,cx
   241 00000162 29D0                    			sub		ax,dx	;	ax=(endx-sttx) = (cx-dx)
   242 00000164 89DE                    			mov		si,bx
   243 00000166 29EE                    			sub		si,bp	;	si=(endy-stty) = (bx-bp)
   244                                  
   245 00000168 89DF                    			mov		di,bx	
   246 0000016A 81EFC700                			sub		di,BOTTOM_EDGE	; di = (endy-DIBHeight) = (bx-BOTTOM_EDGE)
   247                                  
   248 0000016E F7EF                    			imul	di		; 	ax = ( (ex-sx) * (ey-DIBHeight) )
   249 00000170 F7FE                    			idiv	si		; 	ax = ( ( (ex-sx) * (ey-DIBHeight) ) / (ey-sy) )
   250 00000172 29C1                    			sub		cx,ax	;	ex = ex - ( ( (ex-sx) * (ey-DIBHeight) ) / (ey-sy) );
   251 00000174 890E[A681]              			mov		[XEN],cx
   252 00000178 BBC700                  			mov		bx,BOTTOM_EDGE
   253 0000017B 891E[A881]              			mov		[YEN],bx
   254                                  
   255                                  .clpb_c:
   256                                  		
   257                                  ;	if (ey >(DIBHeight-1))
   258                                  ;	{
   259                                  ;		ex = ex - ( (ex-sx) *(ey-DIBHeight) / (ey-sy) );
   260                                  ;		ey = DIBHeight-1;
   261                                  ;	}
   262                                  
   263                                  ;	if (ey <0)
   264                                  ;	{
   265                                  ;		return;
   266                                  ;	}
   267                                  ;		cmp		bx,BOTTOM_EDGE
   268                                  ;		cmp		dx,BOTTOM_EDGE
   269                                  ;		jg		.exit
   270                                  ;	if (sy >(DIBHeight-1))
   271                                  ;	{	
   272                                  ;		return;
   273                                  ;	}
   274                                  
   275                                  ;		cmp		bp,BOTTOM_EDGE
   276                                  ;		jge		.exit
   277                                  ;	if (ey >(DIBHeight-1))
   278                                  ;	{
   279                                  ;		ex = ex - ( (ex-sx) *(ey-DIBHeight) / (ey-sy) );
   280                                  ;		ey = DIBHeight-1;
   281                                  ;	}
   282                                  	
   283 0000017F 8B0E[A281]              		mov		cx,[XST]
   284 00000183 8B16[A481]              		mov		dx,[YST]
   285 00000187 8B2E[A681]              		mov		bp,[XEN]
   286 0000018B 8B36[A881]              		mov		si,[YEN]
   287 0000018F E80100                  		call	Line11
   288                                  
   289 00000192 C3                      .exit	ret
   290                                  		
   291 00000193 39F2                    Line11:		cmp		dx,si 	; vs le ve?
   292 00000195 7306                    			jnc		.noswap	; yes
   293 00000197 87F2                    				xchg	si,dx	; swap vs,ve
   294 00000199 87E9                    				xchg	bp,cx	; swap hs,he
   295 0000019B EB06                    				jmp	.vdiff
   296                                  
   297 0000019D 7504                    .noswap:	jne		.vdiff			; v not same
   298 0000019F 39E9                    			cmp		cx,bp		; v is same 
   299 000001A1 7436                    			je 		.quit		; h is same
   300                                  
   301 000001A3 29F2                    .vdiff:		sub		dx,si	; ver diff = ve-vs
   302 000001A5 29E9                    			sub		cx,bp	; hs le he? - replace with sub below? todo
   303 000001A7 7360                    			jnc		.hforward	; yes
   304                                  
   305 000001A9 F7D9                    .hbackward:	neg 	cx	 		; decrement line across everytime and line down every few times
   306 000001AB 39D1                     			cmp		cx,dx
   307 000001AD 7501                    			jne		.hbnodiag ; .quit ; .vbackward ; .quit ;	.vbackward
   308 000001AF 41                      					inc		cx	; diagonal
   309 000001B0 7228                    .hbnodiag:	jc		.vbackward
   310                                  
   311 000001B2 F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   312 000001B4 01F6                    			add		si,si	; start ver *2
   313 000001B6 01ED                    			add		bp,bp	; start hor *2
   314 000001B8 81C6[0000]              			add		si,BackBufferTable
   315 000001BC 3E8B3C                  			mov		di,[ds:si]	; lookup start ver		
   316                                  	
   317 000001BF 00E0                    .hbloop:		add 	al,ah	; fraction to current
   318 000001C1 7306                    				jnc		.hbplot	;
   319 000001C3 83C602                  					add		si,2
   320 000001C6 3E8B3C                  					mov		di,[ds:si]	; lookup start ver
   321                                  
   322 000001C9 8B9E[000A]              .hbplot:		mov		bx,[HorPosTable+bp]
   323 000001CD 8AB6[0000]              				mov		dh,[OrTable+bp]
   324 000001D1 260831                  				or byte [es:di+bx],dh
   325                                  
   326 000001D4 83ED02                  				sub		bp,2		; next hor
   327 000001D7 E2E6                    				loop	.hbloop		; dec cx jnz
   328 000001D9 C3                      .quit:		ret
   329                                  
   330 000001DA 87D1                    .vbackward: xchg 	dx,cx			; decrement line down everytime and line across every few times
   331 000001DC F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   332                                  
   333 000001DE 01F6                    			add		si,si	; start ver *2
   334 000001E0 01ED                    			add		bp,bp	; start hor *2
   335 000001E2 81C6[0000]              			add		si,BackBufferTable
   336                                  	
   337 000001E6 8AB6[0000]              			mov		dh,[OrTable+bp]
   338 000001EA 8B9E[000A]              			mov		bx,[HorPosTable+bp]
   339                                  	
   340 000001EE 00E0                    .vbloop:		add 	al,ah	; fraction to current
   341 000001F0 730B                    				jnc		.vbplot	;
   342 000001F2 83ED02                  					sub		bp,2
   343 000001F5 8AB6[0000]              					mov		dh,[OrTable+bp]
   344 000001F9 8B9E[000A]              					mov		bx,[HorPosTable+bp]
   345                                  		
   346 000001FD 3E8B3C                  .vbplot:		mov		di,[ds:si]	; lookup start ver
   347 00000200 260831                  				or byte [es:di+bx],dh
   348                                  
   349 00000203 83C602                  				add		si,2		; next ver
   350 00000206 E2E6                    				loop	.vbloop		; dec cl jnz
   351 00000208 C3                      			ret
   352                                  
   353 00000209 39D1                    .hforward: 	cmp		cx,dx			; increment line across everytime and line down every few times
   354 0000020B 7501                    			jne		.hfnodiag
   355 0000020D 41                      				inc 	cx	; diagonal
   356 0000020E 7228                    .hfnodiag:	jc		.vforward
   357                                  
   358 00000210 F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   359 00000212 01F6                    			add		si,si	; start ver *2
   360 00000214 01ED                    			add		bp,bp	; start hor *2
   361 00000216 81C6[0000]              			add		si,BackBufferTable
   362 0000021A 3E8B3C                  			mov		di,[ds:si]	; lookup start ver
   363                                  
   364 0000021D 00E0                    .hfloop:		add 	al,ah	; fraction to current
   365 0000021F 7306                    				jnc		.hfplot	;
   366 00000221 83C602                  					add		si,2
   367 00000224 3E8B3C                  					mov		di,[ds:si]	; lookup start ver		
   368                                  
   369 00000227 8B9E[000A]              .hfplot:		mov		bx,[HorPosTable+bp]
   370 0000022B 8AB6[0000]              				mov		dh,[OrTable+bp]
   371 0000022F 260831                  				or byte [es:di+bx],dh
   372                                  
   373 00000232 83C502                  				add		bp,2		; next hor
   374 00000235 E2E6                    				loop	.hfloop		; dec cx jnz
   375 00000237 C3                      			ret
   376                                  
   377                                  ;	mov		di,[ds:si]
   378                                  
   379 00000238 87D1                    .vforward:	xchg 	dx,cx			; increment line down everytime and line across every few times
   380 0000023A F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   381                                  
   382 0000023C 01F6                    			add		si,si	; start ver *2
   383 0000023E 01ED                    			add		bp,bp	; start hor *2
   384 00000240 81C6[0000]              			add		si,BackBufferTable
   385                                  
   386 00000244 8AB6[0000]              			mov		dh,[OrTable+bp]
   387 00000248 8B9E[000A]              			mov		bx,[HorPosTable+bp]
   388                                  	
   389 0000024C 00E0                    .vfloop:		add 	al,ah	; fraction to current
   390 0000024E 730B                    				jnc		.vfplot	;
   391 00000250 83C502                  					add		bp,2
   392 00000253 8AB6[0000]              					mov		dh,[OrTable+bp]
   393 00000257 8B9E[000A]              					mov		bx,[HorPosTable+bp]
   394                                  		
   395 0000025B 3E8B3C                  .vfplot:		mov		di,[ds:si]	; lookup start ver
   396 0000025E 260831                  				or byte [es:di+bx],dh
   397                                  
   398 00000261 83C602                  				add		si,2		; next ver
   399 00000264 E2E6                    				loop	.vfloop		; dec cl jnz
   400 00000266 C3                      			ret
   401                                  
   402 00000267 39F2                    Line00:		cmp		dx,si 	; vs le ve?
   403 00000269 7306                    			jnc		.noswap	; yes
   404 0000026B 87F2                    				xchg	si,dx	; swap vs,ve
   405 0000026D 87E9                    				xchg	bp,cx	; swap hs,he
   406 0000026F EB06                    				jmp	.vdiff
   407                                  
   408 00000271 7504                    .noswap:	jne		.vdiff			; v not same
   409 00000273 39E9                    				cmp		cx,bp		; v is same 
   410 00000275 7436                    				je 		.quit		; h is same
   411                                  
   412 00000277 29F2                    .vdiff:		sub		dx,si	; ver diff = ve-vs
   413 00000279 29E9                    			sub		cx,bp	; hs le he? - replace with sub below? todo
   414 0000027B 7360                    			jnc		.hforward	; yes
   415                                  
   416 0000027D F7D9                    .hbackward:	neg 	cx		; decrement line across everytime and line down every few times
   417                                   
   418 0000027F 39D1                    			cmp		cx,dx
   419 00000281 7501                    			jne		.hbnodiag ; .quit ; .vbackward ; .quit ;	.vbackward
   420 00000283 41                      				inc	cx	; diagonal
   421 00000284 7228                    .hbnodiag:	jc		.vbackward
   422                                  
   423 00000286 F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   424 00000288 01F6                    			add		si,si	; start ver *2
   425 0000028A 01ED                    			add		bp,bp	; start hor *2
   426 0000028C 81C6[0000]              			add		si,BackBufferTable
   427 00000290 3E8B3C                  			mov		di,[ds:si]	; lookup start ver
   428                                  	
   429 00000293 00E0                    .hbloop:		add 	al,ah	; fraction to current
   430 00000295 7306                    				jnc		.hbplot	;
   431 00000297 83C602                  					add		si,2
   432 0000029A 3E8B3C                  					mov		di,[ds:si]	; lookup start ver
   433                                  
   434 0000029D 8B9E[000A]              .hbplot:		mov		bx,[HorPosTable+bp]
   435 000002A1 8AB6[0005]              				mov		dh,[AndTable+bp]
   436 000002A5 262031                  				and byte [es:di+bx],dh
   437                                  
   438 000002A8 83ED02                  				sub		bp,2		; next hor
   439 000002AB E2E6                    				loop	.hbloop		; dec cx jnz
   440 000002AD C3                      .quit:		ret
   441                                  
   442 000002AE 87D1                    .vbackward:	xchg 	dx,cx		; decrement line down everytime and line across every few times
   443 000002B0 F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   444                                  
   445 000002B2 01F6                    			add		si,si	; start ver *2
   446 000002B4 01ED                    			add		bp,bp	; start hor *2
   447 000002B6 81C6[0000]              			add		si,BackBufferTable
   448 000002BA 8AB6[0005]              			mov		dh,[AndTable+bp]
   449 000002BE 8B9E[000A]              			mov		bx,[HorPosTable+bp]
   450                                  	
   451 000002C2 00E0                    .vbloop:		add 	al,ah	; fraction to current
   452 000002C4 730B                    				jnc		.vbplot	;
   453 000002C6 83ED02                  					sub		bp,2
   454 000002C9 8AB6[0005]              					mov		dh,[AndTable+bp]
   455 000002CD 8B9E[000A]              					mov		bx,[HorPosTable+bp]
   456                                  		
   457 000002D1 3E8B3C                  .vbplot:		mov		di,[ds:si]	; lookup start ver
   458 000002D4 262031                  				and byte [es:di+bx],dh
   459                                  
   460 000002D7 83C602                  				add		si,2		; next ver
   461 000002DA E2E6                    				loop	.vbloop		; dec cl jnz
   462 000002DC C3                      			ret
   463                                  
   464 000002DD 39D1                    .hforward: 	cmp		cx,dx		; increment line across everytime and line down every few times
   465 000002DF 7501                    			jne		.hfnodiag
   466 000002E1 41                      				inc 	cx	; diagonal
   467 000002E2 7228                    .hfnodiag:	jc		.vforward
   468                                  
   469 000002E4 F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   470 000002E6 01F6                    			add		si,si	; start ver *2
   471 000002E8 01ED                    			add		bp,bp	; start hor *2
   472 000002EA 81C6[0000]              			add		si,BackBufferTable
   473 000002EE 3E8B3C                  			mov		di,[ds:si]	; lookup start ver
   474                                  	
   475 000002F1 00E0                    .hfloop:		add 	al,ah	; fraction to current
   476 000002F3 7306                    				jnc		.hfplot	;
   477 000002F5 83C602                  					add		si,2
   478 000002F8 3E8B3C                  					mov		di,[ds:si]	; lookup start ver		
   479                                  
   480 000002FB 8B9E[000A]              .hfplot:		mov		bx,[HorPosTable+bp]
   481 000002FF 8AB6[0005]              				mov		dh,[AndTable+bp]
   482 00000303 262031                  				and byte [es:di+bx],dh
   483                                  	
   484 00000306 83C502                  				add		bp,2		; next hor
   485 00000309 E2E6                    				loop	.hfloop		; dec cx jnz
   486 0000030B C3                      			ret
   487                                  
   488 0000030C 87D1                    .vforward: 	xchg 	dx,cx			; increment line down everytime and line across every few times
   489 0000030E F7F1                    			div 	cx		; dx:ax *bx = ax*65536 *bx
   490                                  
   491 00000310 01F6                    			add		si,si	; start ver *2
   492 00000312 01ED                    			add		bp,bp	; start hor *2
   493 00000314 81C6[0000]              			add		si,BackBufferTable
   494 00000318 8AB6[0005]              			mov		dh,[AndTable+bp]
   495 0000031C 8B9E[000A]              			mov		bx,[HorPosTable+bp]
   496                                  	
   497 00000320 00E0                    .vfloop:		add 	al,ah	; fraction to current
   498 00000322 730B                    				jnc		.vfplot	;
   499 00000324 83C502                  					add		bp,2
   500 00000327 8AB6[0005]              					mov		dh,[AndTable+bp]
   501 0000032B 8B9E[000A]              					mov		bx,[HorPosTable+bp]
   502                                  		
   503 0000032F 3E8B3C                  .vfplot:		mov		di,[ds:si]	; lookup start ver
   504 00000332 262031                  				and byte [es:di+bx],dh
   505                                  
   506 00000335 83C602                  				add		si,2		; next ver
   507 00000338 E2E6                    				loop	.vfloop		; dec cl jnz
   508 0000033A C3                      			ret
   509                                  
   510                                  GetKey:
   511 0000033B B411                    	mov	ah,11h
   512 0000033D CD16                    	int	16h         	; has a key been pressed
   513 0000033F 7418                    	jz	.key_none ; no
   514 00000341 B410                    	mov	ah,10h      ; yes 
   515 00000343 CD16                    	int	16h         	; get it in AX (al= ascii, ah=scan code)
   516 00000345 3C1B                    	cmp	al,KEY_ESC
   517 00000347 7411                    	je	.key_esc
   518 00000349 3C71                    	cmp 	al,KEY_Q
   519 0000034B 7413                    	je 	.key_q
   520 0000034D 3C77                    	cmp 	al,KEY_W
   521 0000034F 741A                    	je 	.key_w
   522 00000351 3C65                    	cmp 	al,KEY_E
   523 00000353 7421                    	je 	.key_e
   524 00000355 3C72                    	cmp 	al,KEY_R
   525 00000357 7428                    	je 	.key_r
   526                                  .key_none:
   527 00000359 C3                      	ret
   528 0000035A B001                    .key_esc:	mov	al,1
   529 0000035C A2[AA81]                		mov	[Exit],al
   530 0000035F C3                      		ret
   531 00000360 A1[9481]                .key_q:	mov	ax,[XAngle]
   532 00000363 40                      		inc	ax
   533 00000364 80E403                  		and ah,03
   534 00000367 A3[9481]                		mov	[XAngle],ax
   535 0000036A C3                      		ret
   536 0000036B A1[9481]                .key_w:	mov	ax,[XAngle]
   537 0000036E 48                      		dec	ax
   538 0000036F 80E403                  		and ah,3
   539 00000372 A3[9481]                		mov	[XAngle],ax
   540 00000375 C3                      		ret
   541 00000376 A1[9681]                .key_e:	mov	ax,[YAngle]
   542 00000379 40                      		inc	ax
   543 0000037A 80E403                  		and ah,3
   544 0000037D A3[9681]                		mov	[YAngle],ax
   545 00000380 C3                      		ret
   546 00000381 A1[9681]                .key_r:	mov	ax,[YAngle]
   547 00000384 48                      		dec	ax
   548 00000385 80E403                  		and ah,3
   549 00000388 A3[9681]                		mov	[YAngle],ax
   550 0000038B C3                      		ret
   551 0000038C C3                      		ret
   552                                  
   553 0000038D BADA03                  WaitVSync: 			mov		dx,INPUT_STATUS_1	; Wait for the leading edge of vertical sync pulse.
   554 00000390 EC                      WaitNotVSyncLoop:		in		al,dx
   555 00000391 2408                    						and		al,VSYNC_MASK
   556 00000393 75FB                    						jnz		WaitNotVSyncLoop
   557 00000395 EC                      WaitVSyncLoop:			in		al,dx
   558 00000396 2408                    						and		al,VSYNC_MASK
   559 00000398 74FB                    						jz		WaitVSyncLoop
   560 0000039A C3                      					ret
   561                                  		
   562                                  CopyClearBackBuffer:
   563 0000039B FC                      	cld
   564                                  
   565 0000039C 8CDD                    	mov		bp,ds			; backup ds
   566                                  
   567 0000039E 8B16[C381]              	mov		dx,[BackBufferSeg]
   568 000003A2 8EDA                    	mov		ds,dx
   569                                  
   570 000003A4 B800B8                  	mov		ax,VIDEO_SEGMENT
   571 000003A7 8EC0                    	mov		es,ax
   572                                  
   573 000003A9 31F6                    	xor		si,si		; DS:SI points to even back buffer
   574 000003AB 89F7                    	mov		di,si		; ES:DI points to CGA memory.
   575                                  
   576 000003AD B9A00F                  	mov		cx,4000
   577 000003B0 F3A5                    	rep	movsw			; copy from ds:si to es:di
   578                                  
   579 000003B2 BE0020                  	mov		si,8192		; DS:SI points to odd back buffer
   580 000003B5 89F7                    	mov		di,si		; ES:DI points to CGA memory.
   581                                  
   582 000003B7 B9A00F                  	mov		cx,4000
   583 000003BA F3A5                    	rep	movsw			; copy from ds:si to es:di
   584                                  
   585 000003BC 8CD8                    	mov		ax,ds		; es points to ds
   586 000003BE 8EC0                    	mov		es,ax
   587                                  
   588                                  ;	mov		ax,0 ; 00101101001011010b ;
   589 000003C0 31C0                    	xor		ax,ax
   590 000003C2 89C7                    	mov		di,ax
   591                                  
   592                                  ;	xor		di,di		; DS:SI points to even back buffer	
   593 000003C4 B9A00F                  	mov		cx,4000
   594 000003C7 F3AB                    	rep	stosw			; clear odd back buffer
   595                                  
   596 000003C9 BF0020                  	mov		di,8192		; DS:SI points to odd back buffer	
   597 000003CC B9A00F                  	mov		cx,4000
   598 000003CF F3AB                    	rep	stosw			; clear odd back buffer
   599                                  
   600 000003D1 8EDD                    	mov		ds,bp			; restore ds
   601                                  
   602 000003D3 C3                      	ret
   603                                  
   604                                  Plot00:
   605 000003D4 01DB                    	add		bx,bx 			; start ver *2
   606 000003D6 8BBF[0000]              	mov		di,[BackBufferTable+bx]	; lookup start ver
   607 000003DA 01ED                    	add		bp,bp			; start hor *2
   608 000003DC 03BE[000A]              	add		di,[HorPosTable+bp]	; add start hor
   609 000003E0 268A0D                  	mov		cl,[es:di]
   610 000003E3 228E[0005]              	and		cl,[AndTable+bp]
   611 000003E7 26880D                  	mov		[es:di],cl
   612 000003EA C3                      	ret
   613                                  
   614                                  Plot11:
   615 000003EB 01DB                    	add		bx,bx 			; start ver *2
   616 000003ED 8BBF[0000]              	mov		di,[BackBufferTable+bx]	; lookup start ver
   617 000003F1 01ED                    	add		bp,bp			; start hor *2
   618 000003F3 03BE[000A]              	add		di,[HorPosTable+bp]	; add start hor
   619 000003F7 268A0D                  	mov		cl,[es:di]
   620 000003FA 0A8E[0000]              	or		cl,[OrTable+bp] 
   621 000003FE 26880D                  	mov		[es:di],cl
   622 00000401 C3                      	ret
   623                                  
   624                                  ;								mov		cx,[ObjectYPos+bx] ; starty
   625                                  ;								mov		dx,[ObjectXPos+bx] ; startx
   626                                  
   627                                  ;								mov		bp,[ObjectYPos+bx] ; endy 
   628                                  ;								mov		si,[ObjectXPos+bx] ; endx - todo - si is the problem?
   629                                  
   630                                  ;.draw_clipped_line:				call	Line11
   631                                  
   632 00000402 A1[A481]                .top_p1off_p2on:	mov		ax,[YST]
   633 00000405 8B0E[A281]              					mov		cx,[XST]
   634 00000409 8B3E[A681]              					mov		di,[XEN]
   635 0000040D 8B1E[A881]              					mov		bx,[YEN]
   636 00000411 E87200                  					call	ClipTop
   637                                  
   638 00000414 893E[A881]              					mov		[YEN],di
   639 00000418 BB0000                  					mov		bx,TOP_EDGE
   640 0000041B 891E[A681]              					mov		[XEN],bx
   641                                  	
   642 0000041F 8B0E[A481]              .left_p1off_p2on:	mov		cx,[YST]
   643 00000423 A1[A281]                					mov		ax,[XST]
   644 00000426 8B3E[A681]              					mov		di,[XEN]
   645 0000042A 8B1E[A881]              					mov		bx,[YEN]	
   646 0000042E E86400                  					call	ClipLeft 	; ax returned 
   647                                  	
   648 00000431 891E[A681]              					mov		[XEN],bx
   649 00000435 BB0000                  					mov		bx,LEFT_EDGE
   650 00000438 891E[A881]              					mov		[YEN],bx
   651                                  		
   652 0000043C 8B2E[A481]              LineClip1off_p2on:	mov		bp,[YST]
   653 00000440 8B16[A281]              					mov		dx,[XST]
   654 00000444 8B3E[A681]              					mov		di,[XEN]
   655 00000448 8B1E[A881]              					mov		bx,[YEN]	
   656 0000044C E86700                  					call	ClipRight
   657                                  
   658 0000044F 892E[A681]              					mov		[XEN],bp
   659 00000453 BB3F01                  					mov		bx,RIGHT_EDGE
   660 00000456 891E[A881]              					mov		[YEN],bx
   661                                  	
   662 0000045A A1[A481]                .bottom_p1off_p2on:	mov		ax,[YST]
   663 0000045D 8B16[A281]              					mov		dx,[XST]
   664 00000461 8B3E[A681]              					mov		di,[XEN]
   665 00000465 8B1E[A881]              					mov		bx,[YEN]	
   666 00000469 E83800                  					call	ClipBottom
   667                                  
   668 0000046C 890E[A881]              					mov		[YEN],cx
   669 00000470 BBC700                  					mov		bx,BOTTOM_EDGE
   670 00000473 891E[A681]              					mov		[XEN],bx
   671                                  
   672                                  	
   673 00000477 89CD                    ClipBehind:	mov		bp,cx	; backup pon.z (onh)
   674 00000479 29F9                    			sub		cx,di 	; pon.z-poff.z (dh)
   675                                  
   676 0000047B 89C7                    			mov		di,ax	; backup pon.x (onv)
   677 0000047D 29D8                    			sub		ax,bx	; pon.x-poff.x (dv)
   678                                  
   679 0000047F F7ED                    			imul	bp	; pon.x-poff.x (dx) * pon.z (onh) 
   680 00000481 F7F9                    			idiv	cx	; 	/ pon.z-poff.z (dh) (pon.z+poff.z)
   681                                  
   682 00000483 29C7                    			sub	di,ax
   683 00000485 C3                      			ret
   684                                  	
   685                                  ; input
   686                                  ; ax = x on screen ; pon.x = +ve
   687                                  ; bx = x off screen ; poff.x = -ve
   688                                  ; dx = y on screen ; pon.y
   689                                  ; di = y off screen ; poff.y
   690                                  ; output
   691                                  ; ax = clippedy
   692                                  
   693 00000486 89CD                    ClipTop:	mov		bp,cx	; backup pon.x (onh)
   694 00000488 29F9                    			sub		cx,di 	; pon.x-poff.x (dh)
   695                                  
   696 0000048A 89C7                    			mov		di,ax	; backup pon.y (onv)
   697 0000048C 29D8                    			sub		ax,bx	; pon.y-poff.y (dv)
   698                                  
   699 0000048E F7ED                    			imul	bp	; pon.y-poff.y (dv) * pon.x (onh) 
   700 00000490 F7F9                    			idiv	cx	; 	/ pon.x-poff.x (dh) (pon.x+poff.x)
   701                                  
   702 00000492 29C7                    			sub		di,ax
   703 00000494 C3                      			ret
   704                                  
   705 00000495 89CD                    ClipLeft:	mov		bp,cx	; backup pon.x (onh)
   706 00000497 29D9                    			sub		cx,bx 	; pon.x-poff.x (dh)
   707                                  
   708 00000499 89C3                    			mov		bx,ax	; backup pon.y (onv)
   709 0000049B 29F8                    			sub		ax,di	; pon.y-poff.y (dv)
   710                                  
   711 0000049D F7ED                    			imul	bp	; pon.y-poff.y (dv) * pon.x (onh) 
   712 0000049F F7F9                    			idiv	cx	; 	/ pon.x-poff.x (dh) (pon.x+poff.x)
   713                                  
   714 000004A1 29C3                    			sub		bx,ax
   715 000004A3 C3                      			ret
   716                                  
   717 000004A4 BDC700                  ClipBottom:	mov		bp,BOTTOM_EDGE
   718 000004A7 29D5                    			sub		bp,dx	; rightedge - pon.x (onh)
   719 000004A9 29D7                    			sub		di,dx	; poff.x - pon.x (dh)
   720                                  
   721 000004AB 89C1                    			mov		cx,ax
   722 000004AD 29D8                    			sub		ax,bx	; pon.y-poff.y (dv)
   723                                  
   724 000004AF F7ED                    			imul	bp
   725 000004B1 F7FF                    			idiv	di
   726                                  	
   727 000004B3 29C1                    			sub		cx,ax
   728 000004B5 C3                      			ret
   729                                  
   730 000004B6 B83F01                  ClipRight:	mov		ax,RIGHT_EDGE
   731 000004B9 29E8                    			sub		ax,bp	; rightedge - pon.x (onh)
   732 000004BB 29EB                    			sub		bx,bp	; poff.x - pon.x (dh)
   733                                  	
   734 000004BD 89D5                    			mov		bp,dx
   735 000004BF 29FA                    			sub		dx,di	; pon.y-poff.y (dv)
   736                                  
   737 000004C1 F7EA                    			imul	dx
   738 000004C3 F7FB                    			idiv	bx
   739                                  
   740 000004C5 29C5                    			sub		bp,ax
   741 000004C7 C3                      			ret
   742                                  	
   743 000004C8 80FF00                  GetSin256:	cmp		bh,0
   744 000004CB 740A                    			je		.s000090
   745 000004CD 80FF01                  .s090180:	cmp		bh,1
   746 000004D0 750A                    			jne		.s180270
   747 000004D2 30FF                    				xor		bh,bh
   748 000004D4 80F3FF                  				xor		bl,255
   749 000004D7 8A87[D010]              .s000090		mov		al,[sintab+bx]
   750 000004DB C3                      				ret
   751 000004DC 80FF02                  .s180270:	cmp		bh,2
   752 000004DF 7509                    			jne		.s270000
   753 000004E1 30FF                    				xor		bh,bh
   754 000004E3 8A87[D010]              				mov		al,[sintab+bx]
   755 000004E7 F6D8                    				neg		al
   756 000004E9 C3                      				ret
   757 000004EA 30FF                    .s270000:	xor		bh,bh
   758 000004EC 80F3FF                  			xor		bl,255
   759 000004EF 8A87[D010]              			mov		al,[sintab+bx]
   760 000004F3 F6D8                    			neg		al
   761 000004F5 C3                      			ret
   762                                  
   763 000004F6 89EB                    SinCos:		mov		bx,bp
   764 000004F8 E8CDFF                  			call	GetSin256
   765 000004FB 98                      			cbw
   766 000004FC 89EB                    			mov		bx,bp
   767 000004FE 01C0                    			add		ax,ax
   768 00000500 89C5                    			mov		bp,ax
   769 00000502 FEC7                    			inc		bh
   770 00000504 80E703                  			and		bh,3
   771 00000507 E8BEFF                  			call	GetSin256
   772 0000050A 98                      			cbw
   773 0000050B 01C0                    			add		ax,ax
   774 0000050D C3                      			ret
   775                                  
   776 0000050E 89EB                    SinCosV2:	mov		bx,bp
   777 00000510 E8B5FF                  			call	GetSin256
   778 00000513 98                      			cbw
   779 00000514 89EB                    			mov		bx,bp
   780 00000516 89C5                    			mov		bp,ax
   781 00000518 FEC7                    			inc		bh
   782 0000051A 80E703                  			and		bh,3
   783 0000051D E8A8FF                  			call	GetSin256
   784 00000520 98                      			cbw
   785 00000521 C3                      			ret
   786                                  				
   787                                  
   788 00000522 8B2E[9481]              BuildRotateMatrixV2	mov		bp,[XAngle]
   789 00000526 E8E5FF                  					call	SinCosV2
   790 00000529 892E[9881]              					mov		[SinX],bp 	; rs
   791 0000052D A3[9A81]                					mov		[CosX],ax	; rc
   792                                  ;					mov		[SinX],ax 	; rs
   793                                  ;					mov		[CosX],bp	; rc
   794                                  
   795 00000530 8B2E[9681]              					mov		bp,[YAngle]
   796 00000534 E8D7FF                  					call	SinCosV2
   797 00000537 892E[9C81]              					mov		[SinY],bp	; ps
   798 0000053B A3[9E81]                					mov		[CosY],ax	; pc
   799                                  ;					mov		[SinY],ax	; ps
   800                                  ;					mov		[CosY],bp	; pc
   801                                  					
   802 0000053E C3                      					ret
   803                                  					
   804 0000053F 89FE                    HexChar:	mov		si,di
   805 00000541 88C3                    			mov		bl,al
   806 00000543 D0EB                    			shr		bl,1
   807 00000545 D0EB                    			shr		bl,1
   808 00000547 D0EB                    			shr		bl,1
   809 00000549 D0EB                    			shr		bl,1
   810 0000054B 83E30F                  			and		bx,15
   811 0000054E 8AA7[8010]              			mov		ah,[Hex0+bx]
   812 00000552 268825                  			mov		[es:di],ah
   813 00000555 81C70020                			add		di,8192
   814 00000559 8AA7[9010]              			mov		ah,[Hex1+bx]
   815 0000055D 268825                  			mov		[es:di],ah
   816 00000560 81EFB01F                			sub		di,8192-80
   817 00000564 8AA7[A010]              			mov		ah,[Hex2+bx]
   818 00000568 268825                  			mov		[es:di],ah
   819 0000056B 81C70020                			add		di,8192
   820 0000056F 8AA7[B010]              			mov		ah,[Hex3+bx]
   821 00000573 268825                  			mov		[es:di],ah
   822 00000576 81EFB01F                			sub		di,8192-80
   823 0000057A 8AA7[C010]              			mov		ah,[Hex4+bx]
   824 0000057E 268825                  			mov		[es:di],ah
   825                                  
   826 00000581 89F7                    			mov		di,si
   827 00000583 47                      			inc		di
   828                                  
   829 00000584 88C3                    			mov		bl,al
   830 00000586 80E30F                  			and		bl,15
   831 00000589 8A87[8010]              			mov		al,[Hex0+bx]
   832 0000058D 268805                  			mov		[es:di],al
   833 00000590 81C70020                			add		di,8192
   834 00000594 8A87[9010]              			mov		al,[Hex1+bx]
   835 00000598 268805                  			mov		[es:di],al
   836 0000059B 81EFB01F                			sub		di,8192-80
   837 0000059F 8A87[A010]              			mov		al,[Hex2+bx]
   838 000005A3 268805                  			mov		[es:di],al
   839 000005A6 81C70020                			add		di,8192
   840 000005AA 8A87[B010]              			mov		al,[Hex3+bx]
   841 000005AE 268805                  			mov		[es:di],al
   842 000005B1 81EFB01F                			sub		di,8192-80
   843 000005B5 8A87[C010]              			mov		al,[Hex4+bx]
   844 000005B9 268805                  			mov		[es:di],al
   845 000005BC C3                      			ret
   846                                  
   847 000005BD 50                      Hex32:		push	ax
   848                                  
   849 000005BE 52                      			push	dx
   850 000005BF 53                      			push	bx
   851 000005C0 88F0                    			mov		al,dh
   852 000005C2 E84600                  			call	Hex8
   853                                  						
   854 000005C5 5B                      			pop		bx
   855 000005C6 5A                      			pop		dx
   856                                  
   857 000005C7 53                      			push	bx
   858 000005C8 88D0                    			mov		al,dl
   859 000005CA BF0200                  			mov		di,2
   860 000005CD E83D00                  			call	HexByte
   861                                  
   862 000005D0 5B                      			pop		bx
   863 000005D1 58                      			pop		ax
   864                                  
   865 000005D2 50                      			push	ax
   866 000005D3 53                      			push	bx
   867 000005D4 88E0                    			mov		al,ah
   868 000005D6 BF0400                  			mov		di,4
   869 000005D9 E83100                  			call	HexByte
   870                                  
   871 000005DC 5B                      			pop		bx
   872 000005DD 58                      			pop		ax
   873 000005DE BF0600                  			mov		di,6
   874 000005E1 EB2A                    			jmp		HexByte	; does ret
   875                                  
   876 000005E3 50                      Hex24:		push	ax
   877 000005E4 53                      			push	bx
   878                                  
   879 000005E5 88F8                    			mov		al,bh
   880 000005E7 E82100                  			call	Hex8
   881                                  						
   882 000005EA 5B                      			pop		bx
   883 000005EB 58                      			pop		ax
   884                                  
   885 000005EC 50                      			push	ax
   886 000005ED 53                      			push	bx
   887                                  
   888 000005EE BF0200                  			mov		di,2
   889 000005F1 E81900                  			call	HexByte
   890                                  
   891 000005F4 5B                      			pop		bx
   892 000005F5 58                      			pop		ax
   893                                  
   894 000005F6 88E0                    			mov		al,ah
   895 000005F8 BF0400                  			mov		di,4
   896 000005FB EB10                    			jmp		HexByte	; does ret
   897                                  
   898 000005FD 50                      Hex16:		push	ax
   899 000005FE 53                      			push	bx
   900                                  
   901 000005FF 88E0                    			mov		al,ah
   902 00000601 E80700                  			call	Hex8
   903                                  						
   904 00000604 5B                      			pop		bx
   905 00000605 58                      			pop		ax
   906                                  
   907 00000606 BF0200                  			mov		di,2
   908 00000609 EB02                    			jmp		HexByte ; does ret
   909                                  
   910 0000060B 31FF                    Hex8:		xor		di,di
   911 0000060D 30FF                    HexByte:	xor		bh,bh
   912 0000060F 88DC                    			mov		ah,bl
   913 00000611 00E4                    			add		ah,ah	; *2
   914 00000613 00E3                    			add		bl,ah	; *3
   915 00000615 01DB                    			add		bx,bx	; *6
   916 00000617 01DB                    			add		bx,bx	; *12
   917 00000619 03BF[0000]              			add		di,[BackBufferTable+bx]	; lookup start ver
   918 0000061D E91FFF                  			jmp		HexChar	 ; does ret
   919                                  ;			ret
   920                                  
   921                                  %macro  NEGATE 2
   922                                  			neg		%1
   923                                  			adc		%2,0
   924                                  			neg		%2
   925                                  %endmacro
   926                                  
   927                                  %macro  MULU3216 0
   928                                  			mul		bp 		; H1 x L2
   929                                  			xchg	ax,bx 	; swap ax and H2
   930                                  			mul 	cx 		; H2 x l1
   931                                  			add		bx,ax	; add ax to h2
   932                                  			mov		ax,cx	; mov l1 to ax
   933                                  			mul 	bp 		; l1 x l2
   934                                  			add		bx,dx	; add dx to h2
   935                                  %endmacro
   936                                  
   937                                  ;Neg32V1:	xor		bx,bx	; in=ax,dx out=ax,bx
   938                                  ;			neg		ax
   939                                  ;			sbb		bx,dx
   940                                  ;			ret
   941                                  
   942                                  ;Neg32V2:	neg		ax
   943                                  ;			adc		dx,0
   944                                  ;			neg		dx
   945                                  ;			ret
   946                                  			
   947 00000620 31F6                    Muli32:		xor		si,si		; clear neg count
   948 00000622 84E4                    			test	ah,ah		; check sign of H1
   949 00000624 7908                    			jns	.test1
   950                                  				NEGATE	cx,ax
   922 00000626 F7D9                <1>  neg %1
   923 00000628 83D000              <1>  adc %2,0
   924 0000062B F7D8                <1>  neg %2
   951 0000062D 46                      				inc		si		; inc neg count
   952 0000062E 84FF                    .test1:		test	bh,bh		; check sign of H2
   953 00000630 7908                    			jns	.test2
   954                                  				NEGATE	bp,bx
   922 00000632 F7DD                <1>  neg %1
   923 00000634 83D300              <1>  adc %2,0
   924 00000637 F7DB                <1>  neg %2
   955 00000639 4E                      				dec		si		; dec neg count
   956                                  .test2:		MULU3216					;	call	Mulu32	; do mulu32
   956                              <1> .test2: 
   928 0000063A F7E5                <1>  mul bp
   929 0000063C 93                  <1>  xchg ax,bx
   930 0000063D F7E1                <1>  mul cx
   931 0000063F 01C3                <1>  add bx,ax
   932 00000641 89C8                <1>  mov ax,cx
   933 00000643 F7E5                <1>  mul bp
   934 00000645 01D3                <1>  add bx,dx
   957 00000647 85F6                    			test	si,si
   958 00000649 7407                    			jz		.test3
   959                                  				NEGATE	ax,bx
   922 0000064B F7D8                <1>  neg %1
   923 0000064D 83D300              <1>  adc %2,0
   924 00000650 F7DB                <1>  neg %2
   960 00000652 C3                      .test3:		ret
   961                                  
   962                                  ; ax = H1
   963                                  ; bx = H2
   964                                  ; cx = L1
   965                                  ; bp = L2
   966                                  ; H1 * L2
   967                                  ; H2 * L1
   968                                  ; L1 x L2			
   969                                  Mulu32:		MULU3216
   969                              <1> Mulu32: 
   928 00000653 F7E5                <1>  mul bp
   929 00000655 93                  <1>  xchg ax,bx
   930 00000656 F7E1                <1>  mul cx
   931 00000658 01C3                <1>  add bx,ax
   932 0000065A 89C8                <1>  mov ax,cx
   933 0000065C F7E5                <1>  mul bp
   934 0000065E 01D3                <1>  add bx,dx
   970                                  ;			mul		bp 		; H1 x L2
   971                                  ;			xchg	ax,bx 	; swap ax and H2
   972                                  ;			mul 	cx 		; H2 x l1
   973                                  ;			add		bx,ax	; add ax to h2
   974                                  ;			mov		ax,cx	; mov l1 to ax
   975                                  ;			mul 	bp 		; l1 x l2
   976                                  ;			add		bx,dx	; add dx to h2
   977 00000660 C3                      			ret 			; rc = bx + ax
   978                                  
   979                                  section .data align=8 ; 16 ; 8 ; 16
   980                                  
   981                                  OrTable:	
   982 00000000 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   982 00000009 0030000C000300C000-
   982 00000012 30000C000300C00030-
   982 0000001B 000C000300C0003000-
   982 00000024 0C000300C00030000C-
   982 0000002D 000300C00030000C00-
   982 00000036 0300C00030000C0003-
   982 0000003F 00                 
   983 00000040 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   983 00000049 0030000C000300C000-
   983 00000052 30000C000300C00030-
   983 0000005B 000C000300C0003000-
   983 00000064 0C000300C00030000C-
   983 0000006D 000300C00030000C00-
   983 00000076 0300C00030000C0003-
   983 0000007F 00                 
   984 00000080 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   984 00000089 0030000C000300C000-
   984 00000092 30000C000300C00030-
   984 0000009B 000C000300C0003000-
   984 000000A4 0C000300C00030000C-
   984 000000AD 000300C00030000C00-
   984 000000B6 0300C00030000C0003-
   984 000000BF 00                 
   985 000000C0 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   985 000000C9 0030000C000300C000-
   985 000000D2 30000C000300C00030-
   985 000000DB 000C000300C0003000-
   985 000000E4 0C000300C00030000C-
   985 000000ED 000300C00030000C00-
   985 000000F6 0300C00030000C0003-
   985 000000FF 00                 
   986 00000100 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   986 00000109 0030000C000300C000-
   986 00000112 30000C000300C00030-
   986 0000011B 000C000300C0003000-
   986 00000124 0C000300C00030000C-
   986 0000012D 000300C00030000C00-
   986 00000136 0300C00030000C0003-
   986 0000013F 00                 
   987 00000140 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   987 00000149 0030000C000300C000-
   987 00000152 30000C000300C00030-
   987 0000015B 000C000300C0003000-
   987 00000164 0C000300C00030000C-
   987 0000016D 000300C00030000C00-
   987 00000176 0300C00030000C0003-
   987 0000017F 00                 
   988 00000180 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   988 00000189 0030000C000300C000-
   988 00000192 30000C000300C00030-
   988 0000019B 000C000300C0003000-
   988 000001A4 0C000300C00030000C-
   988 000001AD 000300C00030000C00-
   988 000001B6 0300C00030000C0003-
   988 000001BF 00                 
   989 000001C0 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   989 000001C9 0030000C000300C000-
   989 000001D2 30000C000300C00030-
   989 000001DB 000C000300C0003000-
   989 000001E4 0C000300C00030000C-
   989 000001ED 000300C00030000C00-
   989 000001F6 0300C00030000C0003-
   989 000001FF 00                 
   990 00000200 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   990 00000209 0030000C000300C000-
   990 00000212 30000C000300C00030-
   990 0000021B 000C000300C0003000-
   990 00000224 0C000300C00030000C-
   990 0000022D 000300C00030000C00-
   990 00000236 0300C00030000C0003-
   990 0000023F 00                 
   991 00000240 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   991 00000249 0030000C000300C000-
   991 00000252 30000C000300C00030-
   991 0000025B 000C000300C0003000-
   991 00000264 0C000300C00030000C-
   991 0000026D 000300C00030000C00-
   991 00000276 0300C00030000C0003-
   991 0000027F 00                 
   992 00000280 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   992 00000289 0030000C000300C000-
   992 00000292 30000C000300C00030-
   992 0000029B 000C000300C0003000-
   992 000002A4 0C000300C00030000C-
   992 000002AD 000300C00030000C00-
   992 000002B6 0300C00030000C0003-
   992 000002BF 00                 
   993 000002C0 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   993 000002C9 0030000C000300C000-
   993 000002D2 30000C000300C00030-
   993 000002DB 000C000300C0003000-
   993 000002E4 0C000300C00030000C-
   993 000002ED 000300C00030000C00-
   993 000002F6 0300C00030000C0003-
   993 000002FF 00                 
   994 00000300 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   994 00000309 0030000C000300C000-
   994 00000312 30000C000300C00030-
   994 0000031B 000C000300C0003000-
   994 00000324 0C000300C00030000C-
   994 0000032D 000300C00030000C00-
   994 00000336 0300C00030000C0003-
   994 0000033F 00                 
   995 00000340 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   995 00000349 0030000C000300C000-
   995 00000352 30000C000300C00030-
   995 0000035B 000C000300C0003000-
   995 00000364 0C000300C00030000C-
   995 0000036D 000300C00030000C00-
   995 00000376 0300C00030000C0003-
   995 0000037F 00                 
   996 00000380 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   996 00000389 0030000C000300C000-
   996 00000392 30000C000300C00030-
   996 0000039B 000C000300C0003000-
   996 000003A4 0C000300C00030000C-
   996 000003AD 000300C00030000C00-
   996 000003B6 0300C00030000C0003-
   996 000003BF 00                 
   997 000003C0 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   997 000003C9 0030000C000300C000-
   997 000003D2 30000C000300C00030-
   997 000003DB 000C000300C0003000-
   997 000003E4 0C000300C00030000C-
   997 000003ED 000300C00030000C00-
   997 000003F6 0300C00030000C0003-
   997 000003FF 00                 
   998 00000400 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   998 00000409 0030000C000300C000-
   998 00000412 30000C000300C00030-
   998 0000041B 000C000300C0003000-
   998 00000424 0C000300C00030000C-
   998 0000042D 000300C00030000C00-
   998 00000436 0300C00030000C0003-
   998 0000043F 00                 
   999 00000440 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
   999 00000449 0030000C000300C000-
   999 00000452 30000C000300C00030-
   999 0000045B 000C000300C0003000-
   999 00000464 0C000300C00030000C-
   999 0000046D 000300C00030000C00-
   999 00000476 0300C00030000C0003-
   999 0000047F 00                 
  1000 00000480 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
  1000 00000489 0030000C000300C000-
  1000 00000492 30000C000300C00030-
  1000 0000049B 000C000300C0003000-
  1000 000004A4 0C000300C00030000C-
  1000 000004AD 000300C00030000C00-
  1000 000004B6 0300C00030000C0003-
  1000 000004BF 00                 
  1001 000004C0 C00030000C000300C0-     	dw	192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3,192,48,12,3
  1001 000004C9 0030000C000300C000-
  1001 000004D2 30000C000300C00030-
  1001 000004DB 000C000300C0003000-
  1001 000004E4 0C000300C00030000C-
  1001 000004ED 000300C00030000C00-
  1001 000004F6 0300C00030000C0003-
  1001 000004FF 00                 
  1002                                  
  1003                                  AndTable:	
  1004 00000500 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1004 00000509 00CF00F300FC003F00-
  1004 00000512 CF00F300FC003F00CF-
  1004 0000051B 00F300FC003F00CF00-
  1004 00000524 F300FC003F00CF00F3-
  1004 0000052D 00FC003F00CF00F300-
  1004 00000536 FC003F00CF00F300FC-
  1004 0000053F 00                 
  1005 00000540 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1005 00000549 00CF00F300FC003F00-
  1005 00000552 CF00F300FC003F00CF-
  1005 0000055B 00F300FC003F00CF00-
  1005 00000564 F300FC003F00CF00F3-
  1005 0000056D 00FC003F00CF00F300-
  1005 00000576 FC003F00CF00F300FC-
  1005 0000057F 00                 
  1006 00000580 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1006 00000589 00CF00F300FC003F00-
  1006 00000592 CF00F300FC003F00CF-
  1006 0000059B 00F300FC003F00CF00-
  1006 000005A4 F300FC003F00CF00F3-
  1006 000005AD 00FC003F00CF00F300-
  1006 000005B6 FC003F00CF00F300FC-
  1006 000005BF 00                 
  1007 000005C0 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1007 000005C9 00CF00F300FC003F00-
  1007 000005D2 CF00F300FC003F00CF-
  1007 000005DB 00F300FC003F00CF00-
  1007 000005E4 F300FC003F00CF00F3-
  1007 000005ED 00FC003F00CF00F300-
  1007 000005F6 FC003F00CF00F300FC-
  1007 000005FF 00                 
  1008 00000600 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1008 00000609 00CF00F300FC003F00-
  1008 00000612 CF00F300FC003F00CF-
  1008 0000061B 00F300FC003F00CF00-
  1008 00000624 F300FC003F00CF00F3-
  1008 0000062D 00FC003F00CF00F300-
  1008 00000636 FC003F00CF00F300FC-
  1008 0000063F 00                 
  1009 00000640 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1009 00000649 00CF00F300FC003F00-
  1009 00000652 CF00F300FC003F00CF-
  1009 0000065B 00F300FC003F00CF00-
  1009 00000664 F300FC003F00CF00F3-
  1009 0000066D 00FC003F00CF00F300-
  1009 00000676 FC003F00CF00F300FC-
  1009 0000067F 00                 
  1010 00000680 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1010 00000689 00CF00F300FC003F00-
  1010 00000692 CF00F300FC003F00CF-
  1010 0000069B 00F300FC003F00CF00-
  1010 000006A4 F300FC003F00CF00F3-
  1010 000006AD 00FC003F00CF00F300-
  1010 000006B6 FC003F00CF00F300FC-
  1010 000006BF 00                 
  1011 000006C0 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1011 000006C9 00CF00F300FC003F00-
  1011 000006D2 CF00F300FC003F00CF-
  1011 000006DB 00F300FC003F00CF00-
  1011 000006E4 F300FC003F00CF00F3-
  1011 000006ED 00FC003F00CF00F300-
  1011 000006F6 FC003F00CF00F300FC-
  1011 000006FF 00                 
  1012 00000700 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1012 00000709 00CF00F300FC003F00-
  1012 00000712 CF00F300FC003F00CF-
  1012 0000071B 00F300FC003F00CF00-
  1012 00000724 F300FC003F00CF00F3-
  1012 0000072D 00FC003F00CF00F300-
  1012 00000736 FC003F00CF00F300FC-
  1012 0000073F 00                 
  1013 00000740 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1013 00000749 00CF00F300FC003F00-
  1013 00000752 CF00F300FC003F00CF-
  1013 0000075B 00F300FC003F00CF00-
  1013 00000764 F300FC003F00CF00F3-
  1013 0000076D 00FC003F00CF00F300-
  1013 00000776 FC003F00CF00F300FC-
  1013 0000077F 00                 
  1014 00000780 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1014 00000789 00CF00F300FC003F00-
  1014 00000792 CF00F300FC003F00CF-
  1014 0000079B 00F300FC003F00CF00-
  1014 000007A4 F300FC003F00CF00F3-
  1014 000007AD 00FC003F00CF00F300-
  1014 000007B6 FC003F00CF00F300FC-
  1014 000007BF 00                 
  1015 000007C0 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1015 000007C9 00CF00F300FC003F00-
  1015 000007D2 CF00F300FC003F00CF-
  1015 000007DB 00F300FC003F00CF00-
  1015 000007E4 F300FC003F00CF00F3-
  1015 000007ED 00FC003F00CF00F300-
  1015 000007F6 FC003F00CF00F300FC-
  1015 000007FF 00                 
  1016 00000800 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1016 00000809 00CF00F300FC003F00-
  1016 00000812 CF00F300FC003F00CF-
  1016 0000081B 00F300FC003F00CF00-
  1016 00000824 F300FC003F00CF00F3-
  1016 0000082D 00FC003F00CF00F300-
  1016 00000836 FC003F00CF00F300FC-
  1016 0000083F 00                 
  1017 00000840 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1017 00000849 00CF00F300FC003F00-
  1017 00000852 CF00F300FC003F00CF-
  1017 0000085B 00F300FC003F00CF00-
  1017 00000864 F300FC003F00CF00F3-
  1017 0000086D 00FC003F00CF00F300-
  1017 00000876 FC003F00CF00F300FC-
  1017 0000087F 00                 
  1018 00000880 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1018 00000889 00CF00F300FC003F00-
  1018 00000892 CF00F300FC003F00CF-
  1018 0000089B 00F300FC003F00CF00-
  1018 000008A4 F300FC003F00CF00F3-
  1018 000008AD 00FC003F00CF00F300-
  1018 000008B6 FC003F00CF00F300FC-
  1018 000008BF 00                 
  1019 000008C0 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1019 000008C9 00CF00F300FC003F00-
  1019 000008D2 CF00F300FC003F00CF-
  1019 000008DB 00F300FC003F00CF00-
  1019 000008E4 F300FC003F00CF00F3-
  1019 000008ED 00FC003F00CF00F300-
  1019 000008F6 FC003F00CF00F300FC-
  1019 000008FF 00                 
  1020 00000900 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1020 00000909 00CF00F300FC003F00-
  1020 00000912 CF00F300FC003F00CF-
  1020 0000091B 00F300FC003F00CF00-
  1020 00000924 F300FC003F00CF00F3-
  1020 0000092D 00FC003F00CF00F300-
  1020 00000936 FC003F00CF00F300FC-
  1020 0000093F 00                 
  1021 00000940 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1021 00000949 00CF00F300FC003F00-
  1021 00000952 CF00F300FC003F00CF-
  1021 0000095B 00F300FC003F00CF00-
  1021 00000964 F300FC003F00CF00F3-
  1021 0000096D 00FC003F00CF00F300-
  1021 00000976 FC003F00CF00F300FC-
  1021 0000097F 00                 
  1022 00000980 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1022 00000989 00CF00F300FC003F00-
  1022 00000992 CF00F300FC003F00CF-
  1022 0000099B 00F300FC003F00CF00-
  1022 000009A4 F300FC003F00CF00F3-
  1022 000009AD 00FC003F00CF00F300-
  1022 000009B6 FC003F00CF00F300FC-
  1022 000009BF 00                 
  1023 000009C0 3F00CF00F300FC003F-     	dw	255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3,255-192,255-48,255-12,255-3
  1023 000009C9 00CF00F300FC003F00-
  1023 000009D2 CF00F300FC003F00CF-
  1023 000009DB 00F300FC003F00CF00-
  1023 000009E4 F300FC003F00CF00F3-
  1023 000009ED 00FC003F00CF00F300-
  1023 000009F6 FC003F00CF00F300FC-
  1023 000009FF 00                 
  1024                                  	
  1025                                  HorPosTable:
  1026 00000A00 0000000000000000        	dw	0,0,0,0
  1027 00000A08 0100010001000100        	dw	1,1,1,1
  1028 00000A10 0200020002000200        	dw	2,2,2,2
  1029 00000A18 0300030003000300        	dw	3,3,3,3
  1030 00000A20 0400040004000400        	dw	4,4,4,4
  1031 00000A28 0500050005000500        	dw	5,5,5,5
  1032 00000A30 0600060006000600        	dw	6,6,6,6
  1033 00000A38 0700070007000700        	dw	7,7,7,7
  1034 00000A40 0800080008000800        	dw	8,8,8,8
  1035 00000A48 0900090009000900        	dw	9,9,9,9
  1036                                  	
  1037 00000A50 0A000A000A000A00        	dw	10,10,10,10
  1038 00000A58 0B000B000B000B00        	dw	11,11,11,11
  1039 00000A60 0C000C000C000C00        	dw	12,12,12,12
  1040 00000A68 0D000D000D000D00        	dw	13,13,13,13
  1041 00000A70 0E000E000E000E00        	dw	14,14,14,14
  1042 00000A78 0F000F000F000F00        	dw	15,15,15,15
  1043 00000A80 1000100010001000        	dw	16,16,16,16
  1044 00000A88 1100110011001100        	dw	17,17,17,17
  1045 00000A90 1200120012001200        	dw	18,18,18,18
  1046 00000A98 1300130013001300        	dw	19,19,19,19
  1047                                  	
  1048 00000AA0 1400140014001400        	dw	20,20,20,20
  1049 00000AA8 1500150015001500        	dw	21,21,21,21
  1050 00000AB0 1600160016001600        	dw	22,22,22,22
  1051 00000AB8 1700170017001700        	dw	23,23,23,23
  1052 00000AC0 1800180018001800        	dw	24,24,24,24
  1053 00000AC8 1900190019001900        	dw	25,25,25,25
  1054 00000AD0 1A001A001A001A00        	dw	26,26,26,26
  1055 00000AD8 1B001B001B001B00        	dw	27,27,27,27
  1056 00000AE0 1C001C001C001C00        	dw	28,28,28,28
  1057 00000AE8 1D001D001D001D00        	dw	29,29,29,29
  1058                                  	
  1059 00000AF0 1E001E001E001E00        	dw	30,30,30,30
  1060 00000AF8 1F001F001F001F00        	dw	31,31,31,31
  1061 00000B00 2000200020002000        	dw	32,32,32,32
  1062 00000B08 2100210021002100        	dw	33,33,33,33
  1063 00000B10 2200220022002200        	dw	34,34,34,34
  1064 00000B18 2300230023002300        	dw	35,35,35,35
  1065 00000B20 2400240024002400        	dw	36,36,36,36
  1066 00000B28 2500250025002500        	dw	37,37,37,37
  1067 00000B30 2600260026002600        	dw	38,38,38,38
  1068 00000B38 2700270027002700        	dw	39,39,39,39
  1069                                  
  1070 00000B40 2800280028002800        	dw	40,40,40,40
  1071 00000B48 2900290029002900        	dw	41,41,41,41
  1072 00000B50 2A002A002A002A00        	dw	42,42,42,42
  1073 00000B58 2B002B002B002B00        	dw	43,43,43,43
  1074 00000B60 2C002C002C002C00        	dw	44,44,44,44
  1075 00000B68 2D002D002D002D00        	dw	45,45,45,45
  1076 00000B70 2E002E002E002E00        	dw	46,46,46,46
  1077 00000B78 2F002F002F002F00        	dw	47,47,47,47
  1078 00000B80 3000300030003000        	dw	48,48,48,48
  1079 00000B88 3100310031003100        	dw	49,49,49,49
  1080                                  
  1081 00000B90 3200320032003200        	dw	50,50,50,50
  1082 00000B98 3300330033003300        	dw	51,51,51,51
  1083 00000BA0 3400340034003400        	dw	52,52,52,52
  1084 00000BA8 3500350035003500        	dw	53,53,53,53
  1085 00000BB0 3600360036003600        	dw	54,54,54,54
  1086 00000BB8 3700370037003700        	dw	55,55,55,55
  1087 00000BC0 3800380038003800        	dw	56,56,56,56
  1088 00000BC8 3900390039003900        	dw	57,57,57,57
  1089 00000BD0 3A003A003A003A00        	dw	58,58,58,58
  1090 00000BD8 3B003B003B003B00        	dw	59,59,59,59
  1091                                  
  1092 00000BE0 3C003C003C003C00        	dw	60,60,60,60
  1093 00000BE8 3D003D003D003D00        	dw	61,61,61,61
  1094 00000BF0 3E003E003E003E00        	dw	62,62,62,62
  1095 00000BF8 3F003F003F003F00        	dw	63,63,63,63
  1096 00000C00 4000400040004000        	dw	64,64,64,64
  1097 00000C08 4100410041004100        	dw	65,65,65,65
  1098 00000C10 4200420042004200        	dw	66,66,66,66
  1099 00000C18 4300430043004300        	dw	67,67,67,67
  1100 00000C20 4400440044004400        	dw	68,68,68,68
  1101 00000C28 4500450045004500        	dw	69,69,69,69
  1102                                  
  1103 00000C30 4600460046004600        	dw	70,70,70,70
  1104 00000C38 4700470047004700        	dw	71,71,71,71
  1105 00000C40 4800480048004800        	dw	72,72,72,72
  1106 00000C48 4900490049004900        	dw	73,73,73,73
  1107 00000C50 4A004A004A004A00        	dw	74,74,74,74
  1108 00000C58 4B004B004B004B00        	dw	75,75,75,75
  1109 00000C60 4C004C004C004C00        	dw	76,76,76,76
  1110 00000C68 4D004D004D004D00        	dw	77,77,77,77
  1111 00000C70 4E004E004E004E00        	dw	78,78,78,78
  1112 00000C78 4F004F004F004F00        	dw	79,79,79,79
  1113                                  
  1114                                  HorizonTable:
  1115 00000C80 640065006600670068-     	dw	100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,
  1115 00000C89 0069006A006B006C00-
  1115 00000C92 6D006E006F00700071-
  1115 00000C9B 007200730074007500-
  1115 00000CA4 76007700780079007A-
  1115 00000CAD 007B007C007D007E00-
  1115 00000CB6 7F0080008100820083-
  1115 00000CBF 00                 
  1116 00000CC0 840085008600870088-     	dw	132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
  1116 00000CC9 0089008A008B008C00-
  1116 00000CD2 8D008E008F00900091-
  1116 00000CDB 009200930094009500-
  1116 00000CE4 96009700980099009A-
  1116 00000CED 009B009C009D009E00-
  1116 00000CF6 9F00A000A100A200A3-
  1116 00000CFF 00                 
  1117 00000D00 A400A500A600A700A8-     	dw	164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,
  1117 00000D09 00A900AA00AB00AC00-
  1117 00000D12 AD00AE00AF00B000B1-
  1117 00000D1B 00B200B300B400B500-
  1117 00000D24 B600B700B800B900BA-
  1117 00000D2D 00BB00BC00BD00BE00-
  1117 00000D36 BF00C000C100C200C3-
  1117 00000D3F 00                 
  1118 00000D40 C400C500C600C700C8-     	dw	196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,
  1118 00000D49 00C900CA00CB00CC00-
  1118 00000D52 CD00CE00CF00D000D1-
  1118 00000D5B 00D200D300D400D500-
  1118 00000D64 D600D700D800D900DA-
  1118 00000D6D 00DB00DC00DD00DE00-
  1118 00000D76 DF00E000E100E200E3-
  1118 00000D7F 00                 
  1119 00000D80 E400E500E600E700E8-     	dw	228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,
  1119 00000D89 00E900EA00EB00EC00-
  1119 00000D92 ED00EE00EF00F000F1-
  1119 00000D9B 00F200F300F400F500-
  1119 00000DA4 F600F700F800F900FA-
  1119 00000DAD 00FB00FC00FD00FE00-
  1119 00000DB6 FF0000010101020103-
  1119 00000DBF 01                 
  1120 00000DC0 040105010601070108-     	dw	260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,
  1120 00000DC9 0109010A010B010C01-
  1120 00000DD2 0D010E010F01100111-
  1120 00000DDB 011201130114011501-
  1120 00000DE4 16011701180119011A-
  1120 00000DED 011B011C011D011E01-
  1120 00000DF6 1F0120012101220123-
  1120 00000DFF 01                 
  1121 00000E00 240125012601270128-     	dw	292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,
  1121 00000E09 0129012A012B012C01-
  1121 00000E12 2D012E012F01300131-
  1121 00000E1B 013201330134013501-
  1121 00000E24 36013701380139013A-
  1121 00000E2D 013B013C013D013E01-
  1121 00000E36 3F0140014101420143-
  1121 00000E3F 01                 
  1122 00000E40 440145014601470148-     	dw	324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,
  1122 00000E49 0149014A014B014C01-
  1122 00000E52 4D014E014F01500151-
  1122 00000E5B 015201530154015501-
  1122 00000E64 56015701580159015A-
  1122 00000E6D 015B015C015D015E01-
  1122 00000E76 5F0160016101620163-
  1122 00000E7F 01                 
  1123 00000E80 64FF65FF66FF67FF68-     	dw	-156,-155,-154,-153,-152,-151,-150,-149,-148,-147,-146,-145,-144,-143,-142,-141,-140,-139,-138,-137,-136,-135,-134,-133,-132,-131,-130,-129,-128,-127,-126,-125,
  1123 00000E89 FF69FF6AFF6BFF6CFF-
  1123 00000E92 6DFF6EFF6FFF70FF71-
  1123 00000E9B FF72FF73FF74FF75FF-
  1123 00000EA4 76FF77FF78FF79FF7A-
  1123 00000EAD FF7BFF7CFF7DFF7EFF-
  1123 00000EB6 7FFF80FF81FF82FF83-
  1123 00000EBF FF                 
  1124 00000EC0 84FF85FF86FF87FF88-     	dw	-124,-123,-122,-121,-120,-119,-118,-117,-116,-115,-114,-113,-112,-111,-110,-109,-108,-107,-106,-105,-104,-103,-102,-101,-100,-99,-98,-97,-96,-95,-94,-93,
  1124 00000EC9 FF89FF8AFF8BFF8CFF-
  1124 00000ED2 8DFF8EFF8FFF90FF91-
  1124 00000EDB FF92FF93FF94FF95FF-
  1124 00000EE4 96FF97FF98FF99FF9A-
  1124 00000EED FF9BFF9CFF9DFF9EFF-
  1124 00000EF6 9FFFA0FFA1FFA2FFA3-
  1124 00000EFF FF                 
  1125 00000F00 A4FFA5FFA6FFA7FFA8-     	dw	-92,-91,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-73,-72,-71,-70,-69,-68,-67,-66,-65,-64,-63,-62,-61,
  1125 00000F09 FFA9FFAAFFABFFACFF-
  1125 00000F12 ADFFAEFFAFFFB0FFB1-
  1125 00000F1B FFB2FFB3FFB4FFB5FF-
  1125 00000F24 B6FFB7FFB8FFB9FFBA-
  1125 00000F2D FFBBFFBCFFBDFFBEFF-
  1125 00000F36 BFFFC0FFC1FFC2FFC3-
  1125 00000F3F FF                 
  1126 00000F40 C4FFC5FFC6FFC7FFC8-     	dw	-60,-59,-58,-57,-56,-55,-54,-53,-52,-51,-50,-49,-48,-47,-46,-45,-44,-43,-42,-41,-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,
  1126 00000F49 FFC9FFCAFFCBFFCCFF-
  1126 00000F52 CDFFCEFFCFFFD0FFD1-
  1126 00000F5B FFD2FFD3FFD4FFD5FF-
  1126 00000F64 D6FFD7FFD8FFD9FFDA-
  1126 00000F6D FFDBFFDCFFDDFFDEFF-
  1126 00000F76 DFFFE0FFE1FFE2FFE3-
  1126 00000F7F FF                 
  1127 00000F80 E4FFE5FFE6FFE7FFE8-     	dw	-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,
  1127 00000F89 FFE9FFEAFFEBFFECFF-
  1127 00000F92 EDFFEEFFEFFFF0FFF1-
  1127 00000F9B FFF2FFF3FFF4FFF5FF-
  1127 00000FA4 F6FFF7FFF8FFF9FFFA-
  1127 00000FAD FFFBFFFCFFFDFFFEFF-
  1127 00000FB6 FFFF00000100020003-
  1127 00000FBF 00                 
  1128 00000FC0 040005000600070008-     	dw	4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,
  1128 00000FC9 0009000A000B000C00-
  1128 00000FD2 0D000E000F00100011-
  1128 00000FDB 001200130014001500-
  1128 00000FE4 16001700180019001A-
  1128 00000FED 001B001C001D001E00-
  1128 00000FF6 1F0020002100220023-
  1128 00000FFF 00                 
  1129 00001000 240025002600270028-     	dw	36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,
  1129 00001009 0029002A002B002C00-
  1129 00001012 2D002E002F00300031-
  1129 0000101B 003200330034003500-
  1129 00001024 36003700380039003A-
  1129 0000102D 003B003C003D003E00-
  1129 00001036 3F0040004100420043-
  1129 0000103F 00                 
  1130 00001040 440045004600470048-     	dw	68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,
  1130 00001049 0049004A004B004C00-
  1130 00001052 4D004E004F00500051-
  1130 0000105B 005200530054005500-
  1130 00001064 56005700580059005A-
  1130 0000106D 005B005C005D005E00-
  1130 00001076 5F0060006100620063-
  1130 0000107F 00                 
  1131                                  
  1132 00001080 FC30FCFCCCFCFCFCFC-     Hex0	db 11111100b,00110000b,11111100b,11111100b,11001100b,11111100b,11111100b,11111100b,11111100b,11111100b,11111100b,11111100b,11111100b,11110000b,11111100b,11111100b
  1132 00001089 FCFCFCFCF0FCFC     
  1133 00001090 CCF00C0CCCC0C00CCC-     Hex1	db 11001100b,11110000b,00001100b,00001100b,11001100b,11000000b,11000000b,00001100b,11001100b,11001100b,11001100b,11001100b,11000000b,11001100b,11000000b,11000000b
  1133 00001099 CCCCCCC0CCC0C0     
  1134 000010A0 CC30FCFCFCFCFC0CFC-     Hex2	db 11001100b,00110000b,11111100b,11111100b,11111100b,11111100b,11111100b,00001100b,11111100b,11111100b,11111100b,11110000b,11000000b,11001100b,11111100b,11111100b
  1134 000010A9 FCFCF0C0CCFCFC     
  1135 000010B0 CC30C00C0C0CCC0CCC-     Hex3	db 11001100b,00110000b,11000000b,00001100b,00001100b,00001100b,11001100b,00001100b,11001100b,00001100b,11001100b,11001100b,11000000b,11001100b,11000000b,11000000b
  1135 000010B9 0CCCCCC0CCC0C0     
  1136 000010C0 FCFCFCFC0CFCFC0CFC-     Hex4	db 11111100b,11111100b,11111100b,11111100b,00001100b,11111100b,11111100b,00001100b,11111100b,11111100b,11001100b,11111100b,11111100b,11110000b,11111100b,11000000b
  1136 000010C9 FCCCFCFCF0FCC0     
  1137                                  	
  1138                                  %include  'sin256.inc'
     1                              <1> sintab:
     2 000010D0 000001020303040506- <1>  db     0,    0,    1,    2,    3,    3,    4,    5,    6,    7,    7,    8,    9,   10,   10,   11 ; 16
     2 000010D9 070708090A0A0B      <1>
     3 000010E0 0C0D0E0E0F10111112- <1>  db    12,   13,   14,   14,   15,   16,   17,   17,   18,   19,   20,   21,   21,   22,   23,   24 ; 32
     3 000010E9 13141515161718      <1>
     4 000010F0 18191A1B1B1C1D1E1E- <1>  db    24,   25,   26,   27,   27,   28,   29,   30,   30,   31,   32,   33,   34,   34,   35,   36 ; 48
     4 000010F9 1F202122222324      <1>
     5 00001100 252526272828292A2A- <1>  db    37,   37,   38,   39,   40,   40,   41,   42,   42,   43,   44,   45,   45,   46,   47,   48 ; 64
     5 00001109 2B2C2D2D2E2F30      <1>
     6 00001110 303132323334353536- <1>  db    48,   49,   50,   50,   51,   52,   53,   53,   54,   55,   55,   56,   57,   58,   58,   59 ; 80
     6 00001119 373738393A3A3B      <1>
     7 00001120 3C3C3D3E3E3F404041- <1>  db    60,   60,   61,   62,   62,   63,   64,   64,   65,   66,   66,   67,   68,   68,   69,   70 ; 96
     7 00001129 42424344444546      <1>
     8 00001130 46474848494A4A4B4B- <1>  db    70,   71,   72,   72,   73,   74,   74,   75,   75,   76,   77,   77,   78,   79,   79,   80 ; 112
     8 00001139 4C4D4D4E4F4F50      <1>
     9 00001140 505152525353545555- <1>  db    80,   81,   82,   82,   83,   83,   84,   85,   85,   86,   86,   87,   87,   88,   89,   89 ; 128
     9 00001149 56565757585959      <1>
    10 00001150 5A5A5B5B5C5C5D5D5E- <1>  db    90,   90,   91,   91,   92,   92,   93,   93,   94,   95,   95,   96,   96,   97,   97,   98 ; 144
    10 00001159 5F5F6060616162      <1>
    11 00001160 626363646465656566- <1>  db    98,   99,   99,  100,  100,  101,  101,  101,  102,  102,  103,  103,  104,  104,  105,  105 ; 160
    11 00001169 66676768686969      <1>
    12 00001170 6A6A6A6B6B6C6C6C6D- <1>  db   106,  106,  106,  107,  107,  108,  108,  108,  109,  109,  110,  110,  110,  111,  111,  112 ; 176
    12 00001179 6D6E6E6E6F6F70      <1>
    13 00001180 707071717172727273- <1>  db   112,  112,  113,  113,  113,  114,  114,  114,  115,  115,  115,  116,  116,  116,  117,  117 ; 192
    13 00001189 73737474747575      <1>
    14 00001190 757676767677777778- <1>  db   117,  118,  118,  118,  118,  119,  119,  119,  120,  120,  120,  120,  121,  121,  121,  121 ; 208
    14 00001199 78787879797979      <1>
    15 000011A0 7A7A7A7A7A7B7B7B7B- <1>  db   122,  122,  122,  122,  122,  123,  123,  123,  123,  123,  124,  124,  124,  124,  124,  124 ; 224
    15 000011A9 7B7C7C7C7C7C7C      <1>
    16 000011B0 7D7D7D7D7D7D7D7E7E- <1>  db   125,  125,  125,  125,  125,  125,  125,  126,  126,  126,  126,  126,  126,  126,  126,  126 ; 240
    16 000011B9 7E7E7E7E7E7E7E      <1>
    17 000011C0 7E7E7F7F7F7F7F7F7F- <1>  db   126,  126,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127 ; 256
    17 000011C9 7F7F7F7F7F7F7F      <1>
    18                              <1> 
    19 000011D0 7F7F7F7F7F7F7F7F7F- <1>  db   127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  126,  126 ; 272
    19 000011D9 7F7F7F7F7F7E7E      <1>
    20 000011E0 7E7E7E7E7E7E7E7E7E- <1>  db   126,  126,  126,  126,  126,  126,  126,  126,  126,  125,  125,  125,  125,  125,  125,  125 ; 288
    20 000011E9 7D7D7D7D7D7D7D      <1>
    21 000011F0 7C7C7C7C7C7C7B7B7B- <1>  db   124,  124,  124,  124,  124,  124,  123,  123,  123,  123,  123,  122,  122,  122,  122,  122 ; 304
    21 000011F9 7B7B7A7A7A7A7A      <1>
    22 00001200 797979797878787877- <1>  db   121,  121,  121,  121,  120,  120,  120,  120,  119,  119,  119,  118,  118,  118,  118,  117 ; 320
    22 00001209 77777676767675      <1>
    23 00001210 757574747473737372- <1>  db   117,  117,  116,  116,  116,  115,  115,  115,  114,  114,  114,  113,  113,  113,  112,  112 ; 336
    23 00001219 72727171717070      <1>
    24 00001220 706F6F6E6E6E6D6D6C- <1>  db   112,  111,  111,  110,  110,  110,  109,  109,  108,  108,  108,  107,  107,  106,  106,  106 ; 352
    24 00001229 6C6C6B6B6A6A6A      <1>
    25 00001230 696968686767666665- <1>  db   105,  105,  104,  104,  103,  103,  102,  102,  101,  101,  101,  100,  100,   99,   99,   98 ; 368
    25 00001239 65656464636362      <1>
    26 00001240 62616160605F5F5E5D- <1>  db    98,   97,   97,   96,   96,   95,   95,   94,   93,   93,   92,   92,   91,   91,   90,   90 ; 384
    26 00001249 5D5C5C5B5B5A5A      <1>
    27 00001250 595958575756565555- <1>  db    89,   89,   88,   87,   87,   86,   86,   85,   85,   84,   83,   83,   82,   82,   81,   80 ; 400
    27 00001259 54535352525150      <1>
    28 00001260 504F4F4E4D4D4C4B4B- <1>  db    80,   79,   79,   78,   77,   77,   76,   75,   75,   74,   74,   73,   72,   72,   71,   70 ; 416
    28 00001269 4A4A4948484746      <1>
    29 00001270 464544444342424140- <1>  db    70,   69,   68,   68,   67,   66,   66,   65,   64,   64,   63,   62,   62,   61,   60,   60 ; 432
    29 00001279 403F3E3E3D3C3C      <1>
    30 00001280 3B3A3A393837373635- <1>  db    59,   58,   58,   57,   56,   55,   55,   54,   53,   53,   52,   51,   50,   50,   49,   48 ; 448
    30 00001289 35343332323130      <1>
    31 00001290 302F2E2D2D2C2B2A2A- <1>  db    48,   47,   46,   45,   45,   44,   43,   42,   42,   41,   40,   40,   39,   38,   37,   37 ; 464
    31 00001299 29282827262525      <1>
    32 000012A0 2423222221201F1E1E- <1>  db    36,   35,   34,   34,   33,   32,   31,   30,   30,   29,   28,   27,   27,   26,   25,   24 ; 480
    32 000012A9 1D1C1B1B1A1918      <1>
    33 000012B0 181716151514131211- <1>  db    24,   23,   22,   21,   21,   20,   19,   18,   17,   17,   16,   15,   14,   14,   13,   12 ; 496
    33 000012B9 11100F0E0E0D0C      <1>
    34 000012C0 0B0A0A090807070605- <1>  db    11,   10,   10,    9,    8,    7,    7,    6,    5,    4,    3,    3,    2,    1,    0,    0 ; 512
    34 000012C9 04030302010000      <1>
    35                              <1>  
    36 000012D0 0000FFFEFDFDFCFBFA- <1>  db     0,    0,   -1,   -2,   -3,   -3,   -4,   -5,   -6,   -7,   -7,   -8,   -9,  -10,  -10,  -11 ; 528
    36 000012D9 F9F9F8F7F6F6F5      <1>
    37 000012E0 F4F3F2F2F1F0EFEFEE- <1>  db   -12,  -13,  -14,  -14,  -15,  -16,  -17,  -17,  -18,  -19,  -20,  -21,  -21,  -22,  -23,  -24 ; 544
    37 000012E9 EDECEBEBEAE9E8      <1>
    38 000012F0 E8E7E6E5E5E4E3E2E2- <1>  db   -24,  -25,  -26,  -27,  -27,  -28,  -29,  -30,  -30,  -31,  -32,  -33,  -34,  -34,  -35,  -36 ; 560
    38 000012F9 E1E0DFDEDEDDDC      <1>
    39 00001300 DBDBDAD9D8D8D7D6D6- <1>  db   -37,  -37,  -38,  -39,  -40,  -40,  -41,  -42,  -42,  -43,  -44,  -45,  -45,  -46,  -47,  -48 ; 576
    39 00001309 D5D4D3D3D2D1D0      <1>
    40 00001310 D0CFCECECDCCCBCBCA- <1>  db   -48,  -49,  -50,  -50,  -51,  -52,  -53,  -53,  -54,  -55,  -55,  -56,  -57,  -58,  -58,  -59 ; 592
    40 00001319 C9C9C8C7C6C6C5      <1>
    41 00001320 C4C4C3C2C2C1C0C0BF- <1>  db   -60,  -60,  -61,  -62,  -62,  -63,  -64,  -64,  -65,  -66,  -66,  -67,  -68,  -68,  -69,  -70 ; 608
    41 00001329 BEBEBDBCBCBBBA      <1>
    42 00001330 BAB9B8B8B7B6B6B5B5- <1>  db   -70,  -71,  -72,  -72,  -73,  -74,  -74,  -75,  -75,  -76,  -77,  -77,  -78,  -79,  -79,  -80 ; 624
    42 00001339 B4B3B3B2B1B1B0      <1>
    43 00001340 B0AFAEAEADADACABAB- <1>  db   -80,  -81,  -82,  -82,  -83,  -83,  -84,  -85,  -85,  -86,  -86,  -87,  -87,  -88,  -89,  -89 ; 640
    43 00001349 AAAAA9A9A8A7A7      <1>
    44 00001350 A6A6A5A5A4A4A3A3A2- <1>  db   -90,  -90,  -91,  -91,  -92,  -92,  -93,  -93,  -94,  -95,  -95,  -96,  -96,  -97,  -97,  -98 ; 656
    44 00001359 A1A1A0A09F9F9E      <1>
    45 00001360 9E9D9D9C9C9B9B9B9A- <1>  db   -98,  -99,  -99, -100, -100, -101, -101, -101, -102, -102, -103, -103, -104, -104, -105, -105 ; 672
    45 00001369 9A999998989797      <1>
    46 00001370 969696959594949493- <1>  db  -106, -106, -106, -107, -107, -108, -108, -108, -109, -109, -110, -110, -110, -111, -111, -112 ; 688
    46 00001379 93929292919190      <1>
    47 00001380 90908F8F8F8E8E8E8D- <1>  db  -112, -112, -113, -113, -113, -114, -114, -114, -115, -115, -115, -116, -116, -116, -117, -117 ; 704
    47 00001389 8D8D8C8C8C8B8B      <1>
    48 00001390 8B8A8A8A8A89898988- <1>  db  -117, -118, -118, -118, -118, -119, -119, -119, -120, -120, -120, -120, -121, -121, -121, -121 ; 720
    48 00001399 88888887878787      <1>
    49 000013A0 868686868685858585- <1>  db  -122, -122, -122, -122, -122, -123, -123, -123, -123, -123, -124, -124, -124, -124, -124, -124 ; 736
    49 000013A9 85848484848484      <1>
    50 000013B0 838383838383838282- <1>  db  -125, -125, -125, -125, -125, -125, -125, -126, -126, -126, -126, -126, -126, -126, -126, -126 ; 752
    50 000013B9 82828282828282      <1>
    51 000013C0 828281818181818181- <1>  db  -126, -126, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127 ; 768
    51 000013C9 81818181818181      <1>
    52                              <1>  
    53 000013D0 818181818181818181- <1>  db  -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -126, -126 ; 784
    53 000013D9 81818181818282      <1>
    54 000013E0 828282828282828282- <1>  db  -126, -126, -126, -126, -126, -126, -126, -126, -126, -125, -125, -125, -125, -125, -125, -125 ; 800
    54 000013E9 83838383838383      <1>
    55 000013F0 848484848484858585- <1>  db  -124, -124, -124, -124, -124, -124, -123, -123, -123, -123, -123, -122, -122, -122, -122, -122 ; 816
    55 000013F9 85858686868686      <1>
    56 00001400 878787878888888889- <1>  db  -121, -121, -121, -121, -120, -120, -120, -120, -119, -119, -119, -118, -118, -118, -118, -117 ; 832
    56 00001409 89898A8A8A8A8B      <1>
    57 00001410 8B8B8C8C8C8D8D8D8E- <1>  db  -117, -117, -116, -116, -116, -115, -115, -115, -114, -114, -114, -113, -113, -113, -112, -112 ; 848
    57 00001419 8E8E8F8F8F9090      <1>
    58 00001420 909191929292939394- <1>  db  -112, -111, -111, -110, -110, -110, -109, -109, -108, -108, -108, -107, -107, -106, -106, -106 ; 864
    58 00001429 94949595969696      <1>
    59 00001430 9797989899999A9A9B- <1>  db  -105, -105, -104, -104, -103, -103, -102, -102, -101, -101, -101, -100, -100,  -99,  -99,  -98 ; 880
    59 00001439 9B9B9C9C9D9D9E      <1>
    60 00001440 9E9F9FA0A0A1A1A2A3- <1>  db   -98,  -97,  -97,  -96,  -96,  -95,  -95,  -94,  -93,  -93,  -92,  -92,  -91,  -91,  -90,  -90 ; 896
    60 00001449 A3A4A4A5A5A6A6      <1>
    61 00001450 A7A7A8A9A9AAAAABAB- <1>  db   -89,  -89,  -88,  -87,  -87,  -86,  -86,  -85,  -85,  -84,  -83,  -83,  -82,  -82,  -81,  -80 ; 912
    61 00001459 ACADADAEAEAFB0      <1>
    62 00001460 B0B1B1B2B3B3B4B5B5- <1>  db   -80,  -79,  -79,  -78,  -77,  -77,  -76,  -75,  -75,  -74,  -74,  -73,  -72,  -72,  -71,  -70 ; 928
    62 00001469 B6B6B7B8B8B9BA      <1>
    63 00001470 BABBBCBCBDBEBEBFC0- <1>  db   -70,  -69,  -68,  -68,  -67,  -66,  -66,  -65,  -64,  -64,  -63,  -62,  -62,  -61,  -60,  -60 ; 944
    63 00001479 C0C1C2C2C3C4C4      <1>
    64 00001480 C5C6C6C7C8C9C9CACB- <1>  db   -59,  -58,  -58,  -57,  -56,  -55,  -55,  -54,  -53,  -53,  -52,  -51,  -50,  -50,  -49,  -48 ; 960
    64 00001489 CBCCCDCECECFD0      <1>
    65 00001490 D0D1D2D3D3D4D5D6D6- <1>  db   -48,  -47,  -46,  -45,  -45,  -44,  -43,  -42,  -42,  -41,  -40,  -40,  -39,  -38,  -37,  -37 ; 976
    65 00001499 D7D8D8D9DADBDB      <1>
    66 000014A0 DCDDDEDEDFE0E1E2E2- <1>  db   -36,  -35,  -34,  -34,  -33,  -32,  -31,  -30,  -30,  -29,  -28,  -27,  -27,  -26,  -25,  -24 ; 992
    66 000014A9 E3E4E5E5E6E7E8      <1>
    67 000014B0 E8E9EAEBEBECEDEEEF- <1>  db   -24,  -23,  -22,  -21,  -21,  -20,  -19,  -18,  -17,  -17,  -16,  -15,  -14,  -14,  -13,  -12 ; 1008
    67 000014B9 EFF0F1F2F2F3F4      <1>
    68 000014C0 F5F6F6F7F8F9F9FAFB- <1>  db   -11,  -10,  -10,   -9,   -8,   -7,   -7,   -6,   -5,   -4,   -3,   -3,   -2,   -1,    0,    0 ; 1024
    68 000014C9 FCFDFDFEFF0000      <1>
  1139                                  
  1140                                  section .bss 	; put uninitialized data here
  1141 00000000 <res 194h>              BackBufferTable: 	resw 202 	; 200 screen lines as words
  1142 00000194 <res 8000h>             BackBuffer: 		resw 16384	; 2 screen buffers
  1143                                  
  1144 00008194 ????                    XAngle:	resw	1
  1145 00008196 ????                    YAngle:	resw	1
  1146                                  
  1147 00008198 ????                    SinX:	resw	1
  1148 0000819A ????                    CosX:	resw	1
  1149 0000819C ????                    SinY:	resw	1
  1150 0000819E ????                    CosY:	resw	1
  1151                                  
  1152 000081A0 ????                    HorEdge	resw	1
  1153                                  
  1154 000081A2 ????                    XST		resw	1
  1155 000081A4 ????                    YST		resw	1
  1156 000081A6 ????                    XEN		resw	1
  1157 000081A8 ????                    YEN		resw	1
  1158                                  
  1159 000081AA ??                      Exit:	resb	1
  1160                                  
  1161 000081AB ????                    Test0: 	resw	1
  1162 000081AD ????                    Test1: 	resw	1
  1163 000081AF ????                    Test2: 	resw	1
  1164 000081B1 ????                    Test3: 	resw	1
  1165 000081B3 ????                    Test4: 	resw	1
  1166 000081B5 ????                    Test5: 	resw	1
  1167 000081B7 ????                    Test6: 	resw	1
  1168 000081B9 ????                    Test7: 	resw	1
  1169 000081BB ????                    Test8: 	resw	1
  1170 000081BD ????                    Test9: 	resw	1
  1171 000081BF ????                    Test10: resw	1
  1172 000081C1 ????                    Test11: resw	1
  1173                                  
  1174 000081C3 ????                    BackBufferSeg	resw	1	; pointer to the segment containing the back buffer
  1175                                  
